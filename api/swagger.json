{
    "swagger": "2.0",
    "info": {
        "version": "1.0.0",
        "title": "Trendsetter API",
        "description": "A REST API for all things trendy"
    },
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "basePath": "/api",
    "paths": {
        "/trends": {
            "get": {
                "summary": "Returns all trends",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/arrayOfTrends"
                        }
                    }
                }
            },
            "post": {
                "summary": "Adds a new trend",
                "parameters": [
                    {
                        "name": "trend",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/trend"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/arrayOfTrends"
                        }
                    },
                    "400": {
                        "description": "Invalid data",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    },
                    "409": {
                        "description": "Conflicts with an existing trend",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    }
                }
            }
        },
        "/trends/{filter}": {
            "parameters": [
                {
                    "name": "filter",
                    "in": "path",
                    "type": "string",
                    "minLength": 1,
                    "required": true
                }
            ],
            "get": {
                "summary": "Returns trends by name or year",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/arrayOfTrends"
                        }
                    },
                    "404": {
                        "description": "No trends found",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Deletes a trend by name",
                "responses": {
                    "204": {
                        "description": "OK"
                    }
                }
            }
        }
    },
    "definitions": {
        "trend": {
            "title": "Trend",
            "type": "object",
            "required": [
                "name",
                "from",
                "to"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "minLength": 1,
                    "pattern": "^\\S+.*\\S+$"
                },
                "description": {
                    "type": "string"
                },
                "from": {
                    "type": "number",
                    "minimum": 1,
                    "maximum": 9999
                },
                "to": {
                    "type": "number",
                    "minimum": 1,
                    "maximum": 9999
                }
            },
            "additionalProperties": false
        },
        "arrayOfTrends": {
            "title": "Array of Trends",
            "type": "array",
            "items": {
                "$ref": "#/definitions/trend"
            }
        },
        "error": {
            "title": "Error",
            "type": "object",
            "required": [
                "error",
                "message"
            ],
            "properties": {
                "error": {
                    "type": "number",
                    "minimum": 400
                },
                "message": {
                    "type": "string",
                    "minLength": 1
                }
            }
        }
    }
}